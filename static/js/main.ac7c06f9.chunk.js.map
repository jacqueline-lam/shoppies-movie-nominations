{"version":3,"sources":["images/logo192.png","components/nominations/NominationFloatingBtn.js","images/movie-placeholder.png","components/nominations/NominationListItem.js","components/nominations/NominationDrawer.js","components/nominations/NominationFullBanner.js","components/movies/MovieSearch.js","components/movies/MovieCard.js","components/movies/MovieList.js","containers/MovieListContainer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","top","right","fontSize","extendedIcon","marginRight","spacing","NominatationFloatingBtn","props","nomineeCount","toggleNominationDrawer","classes","Grid","container","justify","className","Tooltip","title","Fab","variant","color","size","aria-label","onClick","listItem","backgroundColor","poster","width","height","display","lineHeight","subtitle","divider","light","button","margin","borderRadius","NominatedMovieCard","movie","removeNominee","useState","isRemoved","setIsRemoved","Title","year","Year","Poster","moviePosterPlaceholder","Fragment","ListItem","ListItemAvatar","alt","src","ListItemText","primary","Typography","component","secondary","Button","id","imdbID","handleRemoveBtn","disabled","endIcon","Divider","list","maxWidth","listStyle","fontFamily","padding","heading","note","NominationDrawer","nominees","toggleDrawer","isOpen","nomineesCount","length","renderNominationList","List","subheading","map","nominatedMovie","NominationListItem","SwipeableDrawer","anchor","open","onClose","onOpen","Alert","elevation","NominationFullBanner","setOpen","handleClose","event","currentTarget","Snackbar","anchorOrigin","vertical","horizontal","severity","gutterBottom","MovieSearch","fetchMovies","query","setQuery","useEffect","Container","type","value","onChange","searchInput","target","placeholder","customTheme","createMuiTheme","responsiveFontSizes","minWidth","media","paddingBottom","header","verticalAlign","justifyContent","movieTitle","marginBottom","MovieCard","disableBtn","btnContent","addNominee","item","md","sm","xs","Card","CardMedia","image","CardContent","CardActions","movieGrid","MovieList","movies","totalResults","resultsPageNum","errorMsg","nominationFull","updatePageNum","totalPages","Math","ceil","isNominated","movieID","find","nominee","max-width","renderMovies","movieData","renderPagination","IconButton","singular","plural","count","renderResults","API_KEY","process","BASE_URL","MovieListContainer","lastSearchTitle","setLastSearchTitle","error","setError","setMovies","totalMatches","setTotalMatches","setResultsPageNum","showNominations","setShowNominations","setNominees","setNominationFull","resetFetchStates","searchTitle","page","apiUrl","concat","fetch","then","resp","json","moviesData","Response","parseInt","Search","Error","NominationFloatingBtn","oldNominees","filter","App","shoppiesIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","palette","dark","main","remove","action","disabledBackground","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ac7c06f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.269cb84d.png\";","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport StarOutlineRoundedIcon from '@material-ui/icons/StarOutlineRounded';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport {\n  Fab,\n  Grid,\n  Tooltip,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    top: '5%',\n    right: '2%',\n    fontSize: '200%',\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n// Nomination Count Floating Action Button - click to display full list\nconst NominatationFloatingBtn = (props) => {\n  const {\n    nomineeCount,\n    toggleNominationDrawer,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grid container\n      justify=\"flex-end\"\n      className={classes.root}>\n      <Tooltip title=\"Your Nominations\">\n        <Fab\n          variant=\"extended\"\n          color=\"secondary\"\n          size=\"large\"\n          aria-label=\"show nominations\"\n          onClick={() => toggleNominationDrawer()}>\n          {(!nomineeCount) ? (\n            <StarOutlineRoundedIcon spacing={3} className={classes.extendedIcon} />\n          ) : (\n              <StarRoundedIcon className={classes.extendedIcon} />\n            )}\n          {nomineeCount}\n        </Fab>\n      </Tooltip>\n    </Grid>\n  );\n};\n\nexport default NominatationFloatingBtn;","export default __webpack_public_path__ + \"static/media/movie-placeholder.1f7599c3.png\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moviePosterPlaceholder from '../../images/movie-placeholder.png';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {\n  Button,\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  listItem: {\n    backgroundColor: '#1D1E21',\n  },\n  poster: {\n    width: '10vh',\n    height: 'auto',\n    marginRight: '1em',\n  },\n  title: {\n    display: 'inline',\n    fontSize: '1.1em',\n    lineHeight: '0.5px',\n  },\n  subtitle: {\n    fontSize: '0.8em',\n  },\n  divider: {\n    light: true,\n  },\n  button: {\n    margin: '0 1em 0.2em 1em',\n    borderRadius: '30px',\n  },\n});\n\n// Display movie poster, title, and year\n// remove specific movie from nomination list\nconst NominatedMovieCard = (props) => {\n  const {\n    movie,\n    removeNominee,\n  } = props;\n\n  const classes = useStyles();\n  const [isRemoved, setIsRemoved] = useState(false);\n  const title = movie.Title;\n  const year = movie.Year;\n  const poster = movie.Poster !== \"N/A\" ? movie.Poster : moviePosterPlaceholder;\n\n  const handleRemoveBtn = (movie) => {\n    setIsRemoved(true);\n    removeNominee(movie);\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem className={classes.listItem}>\n        <ListItemAvatar>\n          <img\n            alt={`${title} Movie Poster`}\n            src={poster}\n            className={classes.poster}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"h6\"\n                className={classes.title}\n                color=\"primary\"\n              >\n                {title}\n              </Typography>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.subtitle}\n                color=\"primary\"\n              >\n                {year}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <Button\n          id={movie.imdbID}\n          className={classes.button}\n          display='inherit-inline'\n          size=\"medium\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={() => handleRemoveBtn(movie)}\n          disabled={isRemoved}\n          endIcon={<DeleteForeverIcon>remove</DeleteForeverIcon>}\n        >\n          {isRemoved ? `Removed` : `Remove`}\n        </Button>\n      </ListItem>\n      <Divider className={classes.divider}\n        variant=\"inset\"\n        component=\"li\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default NominatedMovieCard;","import React from 'react';\nimport NominationListItem from './NominationListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  SwipeableDrawer,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  list: {\n    backgroundColor: '#1D1E21',\n    width: '100%',\n    height: '100%',\n    maxWidth: '480px',\n    listStyle: 'none',\n    \"& .MuiDrawer-paper \": {\n      backgroundColor: '#1D1E21',\n      fontFamily: 'Broadway3D',\n    },\n    padding: '0% 2% 0% 0%',\n  },\n  heading: {\n    display: 'inline',\n  },\n  note: {\n    padding: '0% 3% 1% 3%',\n  },\n});\n\nconst NominationDrawer = (props) => {\n  const {\n    nominees,\n    removeNominee,\n    toggleDrawer,\n    isOpen,\n  } = props;\n\n  const classes = useStyles();\n  const nomineesCount = nominees.length;\n\n  const renderNominationList = (\n    <div id=\"nomination-list\" className={classes.list}>\n      <List>\n        <ListItem>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"h2\"\n                  className={classes.heading}\n                  color=\"primary\"\n                >\n                  Your Nominations\n                   </Typography>\n              </React.Fragment>\n            }\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle1\"\n                  className={classes.subheading}\n                  color=\"primary\"\n                >\n                  🌟 {nomineesCount} / 5 Movie Nominations\n                   </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        {\n          (nomineesCount > 0) ? (\n            nominees.map(nominatedMovie => <NominationListItem\n              key={nominatedMovie.imdbID}\n              movie={nominatedMovie}\n              removeNominee={removeNominee}\n            />)\n          ) : (\n              <Typography\n                className={classes.note}\n                variant='subtitles1'\n                color='primary'\n              >\n                You have not nominated any movies.\n              </Typography>\n            )\n        }\n      </List>\n    </div>\n  );\n\n  return (\n    <div id=\"nomination-drawer\">\n      < SwipeableDrawer\n        anchor='right'\n        open={isOpen}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        {renderNominationList}\n      </SwipeableDrawer >\n    </div>\n  );\n};\n\nexport default NominationDrawer;\n","import React, { useState } from 'react';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst NominationFullBanner = () => {\n  const [open, setOpen] = useState(true);\n  const vertical = 'top', horizontal = 'center';\n\n  const handleClose = (event) => {\n    if (event.currentTarget.title === 'Close') {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical, horizontal }}\n        key=\"topcenter\"\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          <Typography variant=\"h5\" gutterBottom>\n            You have completed 5 nominations!\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            Changed your mind? You can edit the list by removing selected nominees.\n          </Typography>\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default NominationFullBanner;","import React, { useState, useEffect } from 'react';\nimport { Container } from '@material-ui/core';\n\nconst MovieSearch = (props) => {\n  const { fetchMovies } = props;\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (event) => {\n    const searchInput = event.target.value;\n    setQuery(searchInput);\n  };\n\n  // Tells useEffect function to listen for any changes to query state var\n  // when query state changes, execute this fn\n  useEffect(() => {\n    fetchMovies(query);\n  }, [query]);\n\n  return (\n    <Container id='movie-search' maxWidth='lg'>\n      <input\n        id='movie-search-bar'\n        type='text'\n        value={query}\n        onChange={handleQueryChange}\n        placeholder='Search Movie Here'\n      />\n      {query ? <h2>Searching for \"{query}\"</h2> : null}\n    </Container>\n  );\n};\n\nexport default MovieSearch;","import React from 'react';\nimport moviePosterPlaceholder from '../../images/movie-placeholder.png';\nimport {\n  makeStyles,\n  createMuiTheme,\n  responsiveFontSizes\n} from '@material-ui/core/styles';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nlet customTheme = createMuiTheme();\ncustomTheme = responsiveFontSizes(customTheme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 160,\n    backgroundColor: '#2d2d37', //12dp elevation\n  },\n  media: {\n    height: 100,\n    paddingBottom: '100%', // 16:9 = '56.25%'\n  },\n  header: {\n    padding: '10% 3% 0% 3%',\n    height: 80,\n    maxWidth: 1000,\n    color: '#eeeeee',\n    display: 'inline-grid',\n    verticalAlign: 'middle',\n    justifyContent: 'center', // horizontal alignmet\n  },\n  movieTitle: {\n    fontSize: '1.1em',\n    lineHeight: '1',\n  },\n  button: {\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n}));\n\nconst MovieCard = (props) => {\n  const {\n    movie,\n    disableBtn,\n    btnContent,\n    addNominee\n  } = props;\n\n  const classes = useStyles();\n  const poster = movie.Poster !== \"N/A\" ? movie.Poster : moviePosterPlaceholder;\n\n  return (\n    <Grid item md={3} sm={4} xs={6}>\n      <Card className={classes.root} key={movie.imdbID}>\n        <CardMedia\n          className={classes.media}\n          image={poster}\n          title={movie.Title}\n        />\n        <CardContent className={classes.header}>\n          <Typography variant=\"h6\" className={classes.movieTitle}>\n            {movie.Title}\n          </Typography>\n          <Typography variant=\"subtitle2\">\n            {movie.Year}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.button}>\n          <Button\n            aria-label=\"add to nomination list\"\n            className='nominate-btn'\n            id={movie.imdbID}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => addNominee(movie)}\n            disabled={disableBtn}>\n            {btnContent}\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\nexport default MovieCard;","import React from 'react';\nimport MovieCard from './MovieCard';\nimport { Container, IconButton, Tooltip, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Pluralize from 'react-pluralize';\n\nconst RESULTS_PER_PAGE = 10;\n\nconst useStyles = makeStyles((theme) => ({\n  movieGrid: {\n    width: \"100%\",\n    height: \"100%\",\n    margin: theme.spacing(1),\n  },\n}));\n\nconst MovieList = (props) => {\n  const {\n    movies,\n    totalResults,\n    resultsPageNum,\n    errorMsg,\n    nominees,\n    nominationFull,\n    updatePageNum,\n    addNominee,\n  } = props;\n\n  const classes = useStyles();\n  const totalPages = Math.ceil(totalResults / RESULTS_PER_PAGE) || 0;\n\n  const isNominated = (movieID) => {\n    return (!!nominees.find(nominee => nominee.imdbID === movieID));\n  };\n\n  const renderResults = () => {\n    const renderMovies = movies.map(movieData =>\n      <MovieCard\n        key={movieData.imdbID}\n        movie={movieData}\n        disableBtn={isNominated(movieData.imdbID) || nominationFull}\n        btnContent={isNominated(movieData.imdbID) ? `Nominated` : `Nominate`}\n        addNominee={addNominee}\n      />\n    );\n\n    const renderPagination = (\n      <React.Fragment>\n        <Tooltip title=\"Previous Page\">\n          <span>\n            <IconButton\n              className=\"pagination-button\"\n              aria-label=\"next\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => updatePageNum(resultsPageNum - 1)}\n              disabled={resultsPageNum <= 1}>\n              <NavigateBeforeIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <i>{`Page ${resultsPageNum} of ${totalPages}`}</i>\n        <Tooltip title=\"Next Page\">\n          <span>\n            <IconButton\n              className=\"pagination-button\"\n              aria-label=\"previous\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => updatePageNum(resultsPageNum + 1)}\n              disabled={resultsPageNum + 1 > totalPages}>\n              <NavigateNextIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </React.Fragment>\n    )\n\n    return (\n      <React.Fragment>\n        <Pluralize\n          singular={'match'}\n          plural={'matches'}\n          count={totalResults}\n        />\n        {renderPagination}\n        <Grid\n          container\n          spacing={3}\n          className={classes.movieGrid}\n        >\n          {renderMovies}\n        </Grid>\n        {renderPagination}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Container max-width='md' id='movie-list'>\n      {(totalResults > 0) ? (\n        renderResults()\n      ) : (\n          <i>{errorMsg} Try searching your favorite movie!</i>\n        )}\n    </Container>\n  );\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport NominationFloatingBtn from '../components/nominations/NominationFloatingBtn';\nimport NominationDrawer from '../components/nominations/NominationDrawer';\nimport NominationFullBanner from '../components/nominations/NominationFullBanner';\nimport MovieSearch from '../components/movies/MovieSearch';\nimport MovieList from '../components/movies/MovieList';\nimport { Container } from '@material-ui/core';\n\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY\nconst BASE_URL = 'https://www.omdbapi.com/?';\nconst NOMINEE_LIMIT = 5;\n\nconst MovieListContainer = () => {\n  // STATES\n  const [searchCount, setSearchCount] = useState(0);\n  // States for each fetch\n  const [lastSearchTitle, setLastSearchTitle] = useState('');\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [totalMatches, setTotalMatches] = useState(0);\n  const [resultsPageNum, setResultsPageNum] = useState(1);\n  // Nominees state\n  const [showNominations, setShowNominations] = useState(false);\n  const [nominees, setNominees] = useState([]);\n  const [nominationFull, setNominationFull] = useState(false);\n  const nomineeCount = nominees.length;\n\n  const resetFetchStates = (searchTitle) => {\n    // Reset resultsPageNum and lastSearchTitle if is a newSearchTitle\n    const newSearchTitle = (searchTitle !== lastSearchTitle);\n    if (newSearchTitle) setResultsPageNum(1);\n    setError(null);\n    setMovies([]);\n    setTotalMatches(0);\n  };\n\n  const fetchMovies = (query, page = 1) => {\n    resetFetchStates(query);\n    if (!query) return false;\n    let apiUrl = BASE_URL.concat(`s=${query}`, `&page=${page}`, `&type=movie&apikey=${API_KEY}`);\n    // Fetch data from OMDB API\n    // Store search results from response in container states\n    // and pass that data down to its child MovieList\n    fetch(apiUrl)\n      .then(resp => resp.json())\n      .then(moviesData => {\n        if (moviesData.Response === 'True') {\n          setTotalMatches(parseInt(moviesData.totalResults));\n          setMovies(moviesData.Search);\n          setLastSearchTitle(query);\n        } else {\n          setError(moviesData.Error);\n        }\n      });\n    return true;\n  };\n\n  const toggleNominationDrawer = () => {\n    setShowNominations(!showNominations);\n  }\n\n  const updatePageNum = (page) => {\n    setResultsPageNum(page);\n    fetchMovies(lastSearchTitle, page);\n  };\n\n  const addNominee = (movie) => {\n    // Disable adding more than 5 nominees max\n    if (nomineeCount >= NOMINEE_LIMIT) return false;\n    if (nomineeCount + 1 >= NOMINEE_LIMIT) setNominationFull(true);\n    // Update state w/ new array by combining old array w/\n    // the new movie obj using JS Spread operator\n    setNominees(oldNominees => [...oldNominees, movie]);\n    return true;\n  };\n\n  const removeNominee = (movie) => {\n    // remove movie object from array of nominees w/o mutating the state\n    if (nomineeCount - 1 < NOMINEE_LIMIT) {\n      setNominationFull(false);\n    }\n    setNominees(oldNominees => oldNominees.filter(nominee => nominee.imdbID !== movie.imdbID));\n  };\n\n  return (\n    <div id='main-container'>\n      <Container max-width='lg'>\n        <h2>Nominate your favorite movies for The Shoppies Movie Awards! 🏆</h2>\n        <NominationFloatingBtn\n          nomineeCount={nomineeCount}\n          toggleNominationDrawer={toggleNominationDrawer}\n        />\n        {nominationFull ? <NominationFullBanner /> : null}\n        {\n          showNominations ? (\n            <NominationDrawer\n              nominees={nominees}\n              removeNominee={removeNominee}\n              toggleDrawer={toggleNominationDrawer}\n              isOpen={showNominations}\n            />\n          ) : null\n        }\n        <MovieSearch fetchMovies={fetchMovies} />\n        <MovieList\n          movies={movies}\n          totalResults={totalMatches}\n          resultsPageNum={resultsPageNum}\n          errorMsg={error}\n          nominees={nominees}\n          nominationFull={nominationFull}\n          updatePageNum={updatePageNum}\n          addNominee={addNominee}\n        />\n      </Container>\n    </div >\n  );\n};\nexport default MovieListContainer;","import './App.css';\nimport shoppiesIcon from './images/logo192.png';\nimport MovieListContainer from './containers/MovieListContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img id='logo-img' alt='movie thumbnail' src={shoppiesIcon} />\n        <span>The Shoppies</span>\n      </header>\n      <MovieListContainer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // White\n      light: \"#FFFFFF\",\n      dark: \"#cccccc\",\n      main: \"#FFF\",\n    },\n    secondary: {\n      // Shopify light green\n      light: \"#c8f277\",\n      main: \"#95BF47\",\n      dark: \"#64943E\"\n    },\n    remove: {\n      main: \"#CF6679\",\n    },\n    action: {\n      disabled: \"#696969\",\n      disabledBackground: \"#696969\",\n    },\n  },\n  fontFamily: \"Roboto\",\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["images/logo192.png","components/nominations/NominationFloatingBtn.js","images/movie-placeholder.png","components/nominations/NominationListItem.js","components/nominations/NominationDrawer.js","components/nominations/NominationFullBanner.js","components/movies/MovieSearch.js","components/movies/MovieCard.js","components/movies/MovieList.js","containers/ShoppiesContainer.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","right","fontSize","extendedIcon","marginRight","spacing","NominatationFloatingBtn","props","nomineeCount","toggleNominationDrawer","classes","Grid","container","justify","className","Tooltip","title","Fab","variant","color","size","aria-label","onClick","listItem","backgroundColor","padingBottom","poster","width","height","display","lineHeight","subtitle","divider","light","button","margin","borderRadius","NominatedMovieCard","movie","removeNominee","useState","isRemoved","setIsRemoved","Title","year","Year","Poster","moviePosterPlaceholder","Fragment","ListItem","ListItemAvatar","alt","src","ListItemText","primary","Typography","component","secondary","IconButton","id","imdbID","handleRemoveBtn","disabled","Divider","list","maxWidth","listStyle","fontFamily","padding","header","marginBottom","heading","none","NominationDrawer","nominees","toggleDrawer","isOpen","nomineesCount","length","renderNominationList","List","subheading","map","nominatedMovie","NominationListItem","SwipeableDrawer","anchor","open","onClose","onOpen","Alert","elevation","NominationFullBanner","setOpen","handleClose","event","currentTarget","Snackbar","anchorOrigin","vertical","horizontal","severity","gutterBottom","MovieSearch","fetchMovies","query","setQuery","useEffect","Container","type","value","onChange","searchInput","target","placeholder","customTheme","createMuiTheme","responsiveFontSizes","media","paddingBottom","verticalAlign","justifyContent","movieTitle","MovieCard","disableBtn","btnContent","addNominee","item","md","sm","xs","Card","CardMedia","image","CardContent","CardActions","Button","movieGrid","MovieList","movies","totalResults","resultsPageNum","errorMsg","nominationFull","updatePageNum","totalPages","Math","ceil","isNominated","movieID","find","nominee","max-width","renderMovies","movieData","renderPagination","singular","plural","count","renderResults","API_KEY","process","BASE_URL","ShoppiesContainer","lastSearchTitle","setLastSearchTitle","error","setError","setMovies","totalMatches","setTotalMatches","setResultsPageNum","showNominations","setShowNominations","setNominees","setNominationFull","resetFetchStates","searchTitle","page","apiUrl","concat","fetch","then","resp","json","moviesData","Response","parseInt","Search","Error","NominationFloatingBtn","oldNominees","filter","App","shoppiesIcon","window","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","palette","dark","main","remove","action","disabledBackground","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a45ab187.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo192.269cb84d.png\";","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport StarOutlineRoundedIcon from '@material-ui/icons/StarOutlineRounded';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport {\n  Fab,\n  Grid,\n  Tooltip,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: '6%',\n    right: '3%',\n    fontSize: '300%',\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n// Nomination Count Floating Action Button - click to display full list\nconst NominatationFloatingBtn = (props) => {\n  const {\n    nomineeCount,\n    toggleNominationDrawer,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Grid container\n      justify=\"flex-end\"\n      className={classes.root}>\n      <Tooltip title=\"Your Nominations\">\n        <Fab\n          variant=\"extended\"\n          color=\"secondary\"\n          size=\"large\"\n          aria-label=\"show nominations\"\n          onClick={() => toggleNominationDrawer()}>\n          {(!nomineeCount) ? (\n            <StarOutlineRoundedIcon spacing={3} className={classes.extendedIcon} />\n          ) : (\n              <StarRoundedIcon className={classes.extendedIcon} />\n            )}\n          {nomineeCount}\n        </Fab>\n      </Tooltip>\n    </Grid>\n  );\n};\n\nexport default NominatationFloatingBtn;","export default __webpack_public_path__ + \"static/media/movie-placeholder.1f7599c3.png\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport moviePosterPlaceholder from '../../images/movie-placeholder.png';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport {\n  IconButton,\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  listItem: {\n    backgroundColor: '#1D1E21',\n    padingBottom: '7px',\n  },\n  poster: {\n    width: '10vh',\n    height: 'auto',\n    marginRight: '1em',\n  },\n  title: {\n    display: 'inline',\n    fontSize: '1.1em',\n    lineHeight: '0.5px',\n  },\n  subtitle: {\n    fontSize: '0.8em',\n  },\n  divider: {\n    light: true,\n  },\n  button: {\n    margin: '0 1em 0.2em 1em',\n    borderRadius: '30px',\n  },\n});\n\n// Display movie poster, title, and year\n// remove specific movie from nomination list\nconst NominatedMovieCard = (props) => {\n  const {\n    movie,\n    removeNominee,\n  } = props;\n\n  const classes = useStyles();\n  const [isRemoved, setIsRemoved] = useState(false);\n  const title = movie.Title;\n  const year = movie.Year;\n  const poster = movie.Poster !== \"N/A\" ? movie.Poster : moviePosterPlaceholder;\n\n  const handleRemoveBtn = (movie) => {\n    setIsRemoved(true);\n    removeNominee(movie);\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem className={classes.listItem}>\n        <ListItemAvatar>\n          <img\n            alt={`${title} Movie Poster`}\n            src={poster}\n            className={classes.poster}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"h6\"\n                className={classes.title}\n                color=\"primary\"\n              >\n                {title}\n              </Typography>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.subtitle}\n                color=\"primary\"\n              >\n                {year}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <Tooltip title=\"Remove nomination\">\n          <IconButton\n            id={movie.imdbID}\n            className={classes.button}\n            aria-label=\"delete\"\n            size=\"medium\"\n            color=\"secondary\"\n            onClick={() => handleRemoveBtn(movie)}\n            disabled={isRemoved}\n          >\n            <DeleteForeverIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItem>\n      <Divider className={classes.divider}\n        variant=\"inset\"\n        component=\"li\"\n      />\n    </React.Fragment >\n  );\n};\n\nexport default NominatedMovieCard;","import React from 'react';\nimport NominationListItem from './NominationListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  SwipeableDrawer,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  list: {\n    backgroundColor: '#1D1E21',\n    width: '100%',\n    height: '100%',\n    maxWidth: '480px',\n    listStyle: 'none',\n    \"& .MuiDrawer-paper \": {\n      backgroundColor: '#1D1E21',\n      fontFamily: 'Broadway3D',\n    },\n    padding: '0% 2% 0% 0%',\n  },\n  header: {\n    marginBottom: '5px',\n  },\n  heading: {\n    display: 'inline',\n  },\n  none: {\n    padding: '10% 0% 0% 3%',\n  },\n});\n\nconst NominationDrawer = (props) => {\n  const {\n    nominees,\n    removeNominee,\n    toggleDrawer,\n    isOpen,\n  } = props;\n\n  const classes = useStyles();\n  const nomineesCount = nominees.length;\n\n  const renderNominationList = (\n    <div id=\"nomination-list\" className={classes.list}>\n      <List>\n        <ListItem className={classes.header}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"h3\"\n                  className={classes.heading}\n                  color=\"primary\"\n                >\n                  Your Nominations\n                   </Typography>\n              </React.Fragment>\n            }\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"subtitle1\"\n                  className={classes.subheading}\n                  color=\"primary\"\n                >\n                  🌟 {nomineesCount} / 5 Movie Nominations\n                   </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        {\n          (nomineesCount > 0) ? (\n            nominees.map(nominatedMovie => <NominationListItem\n              key={nominatedMovie.imdbID}\n              movie={nominatedMovie}\n              removeNominee={removeNominee}\n            />)\n          ) : (\n              <Typography\n                className={classes.none}\n                variant='subtitles1'\n                color='primary'\n              >\n                You have not nominated any movies.\n              </Typography>\n            )\n        }\n      </List>\n    </div>\n  );\n\n  return (\n    <div id=\"nomination-drawer\">\n      < SwipeableDrawer\n        anchor='right'\n        open={isOpen}\n        onClose={toggleDrawer}\n        onOpen={toggleDrawer}\n      >\n        {renderNominationList}\n      </SwipeableDrawer >\n    </div>\n  );\n};\n\nexport default NominationDrawer;\n","import React, { useState } from 'react';\nimport { Snackbar, Typography } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst NominationFullBanner = () => {\n  const [open, setOpen] = useState(true);\n  const vertical = 'top', horizontal = 'center';\n\n  const handleClose = (event) => {\n    if (event.currentTarget.title === 'Close') {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div className='root'>\n      <Snackbar\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{ vertical, horizontal }}\n        key=\"topcenter\"\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          <Typography variant=\"h5\" gutterBottom>\n            You have completed 5 nominations!\n          </Typography>\n          <Typography variant=\"body1\" gutterBottom>\n            Changed your mind? You can edit the list by removing selected nominees.\n          </Typography>\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default NominationFullBanner;","import React, { useState, useEffect } from 'react';\nimport { Container } from '@material-ui/core';\n\nconst MovieSearch = (props) => {\n  const { fetchMovies } = props;\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = (event) => {\n    const searchInput = event.target.value;\n    setQuery(searchInput);\n  };\n\n  // Tells useEffect function to listen for any changes to query state var\n  // when query state changes, execute this fn\n  useEffect(() => {\n    fetchMovies(query);\n  }, [query]);\n\n  return (\n    <Container id='movie-search' maxWidth='lg'>\n      <input\n        id='movie-search-bar'\n        type='text'\n        value={query}\n        onChange={handleQueryChange}\n        placeholder='Search Movie Here'\n      />\n      {query ? <h2>Searching for \"{query}\"</h2> : null}\n    </Container>\n  );\n};\n\nexport default MovieSearch;","import React from 'react';\nimport moviePosterPlaceholder from '../../images/movie-placeholder.png';\nimport {\n  makeStyles,\n  createMuiTheme,\n  responsiveFontSizes\n} from '@material-ui/core/styles';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActions,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nlet customTheme = createMuiTheme();\ncustomTheme = responsiveFontSizes(customTheme);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 160,\n    backgroundColor: '#2d2d37', //12dp elevation\n  },\n  media: {\n    height: 100,\n    paddingBottom: '100%', // 16:9 = '56.25%'\n  },\n  header: {\n    padding: '10% 3% 0% 3%',\n    height: 80,\n    maxWidth: 1000,\n    color: '#eeeeee',\n    display: 'inline-grid',\n    verticalAlign: 'middle',\n    justifyContent: 'center', // horizontal alignmet\n  },\n  movieTitle: {\n    fontSize: '1.1em',\n    lineHeight: '1',\n  },\n  button: {\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n}));\n\nconst MovieCard = (props) => {\n  const {\n    movie,\n    disableBtn,\n    btnContent,\n    addNominee\n  } = props;\n\n  const classes = useStyles();\n  const poster = movie.Poster !== \"N/A\" ? movie.Poster : moviePosterPlaceholder;\n\n  return (\n    <Grid item md={3} sm={4} xs={6}>\n      <Card className={classes.root} key={movie.imdbID}>\n        <CardMedia\n          className={classes.media}\n          image={poster}\n          title={movie.Title}\n        />\n        <CardContent className={classes.header}>\n          <Typography variant=\"h6\" className={classes.movieTitle}>\n            {movie.Title}\n          </Typography>\n          <Typography variant=\"subtitle2\">\n            {movie.Year}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.button}>\n          <Button\n            aria-label=\"add to nomination list\"\n            className='nominate-btn'\n            id={movie.imdbID}\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => addNominee(movie)}\n            disabled={disableBtn}>\n            {btnContent}\n          </Button>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\nexport default MovieCard;","import React from 'react';\nimport MovieCard from './MovieCard';\nimport { Container, IconButton, Tooltip, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Pluralize from 'react-pluralize';\n\nconst RESULTS_PER_PAGE = 10;\n\nconst useStyles = makeStyles((theme) => ({\n  movieGrid: {\n    width: \"100%\",\n    height: \"100%\",\n    justify: 'center',\n    margin: theme.spacing(0.2),\n  },\n}));\n\nconst MovieList = (props) => {\n  const {\n    movies,\n    totalResults,\n    resultsPageNum,\n    errorMsg,\n    nominees,\n    nominationFull,\n    updatePageNum,\n    addNominee,\n  } = props;\n\n  const classes = useStyles();\n  const totalPages = Math.ceil(totalResults / RESULTS_PER_PAGE) || 0;\n\n  const isNominated = (movieID) => {\n    return (!!nominees.find(nominee => nominee.imdbID === movieID));\n  };\n\n  const renderResults = () => {\n    const renderMovies = movies.map(movieData =>\n      <MovieCard\n        key={movieData.imdbID}\n        movie={movieData}\n        disableBtn={isNominated(movieData.imdbID) || nominationFull}\n        btnContent={isNominated(movieData.imdbID) ? `Nominated` : `Nominate`}\n        addNominee={addNominee}\n      />\n    );\n\n    const renderPagination = (\n      <React.Fragment>\n        <Tooltip title=\"Previous Page\">\n          <span>\n            <IconButton\n              className=\"pagination-button\"\n              aria-label=\"next\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => updatePageNum(resultsPageNum - 1)}\n              disabled={resultsPageNum <= 1}>\n              <NavigateBeforeIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n        <i>{`Page ${resultsPageNum} of ${totalPages}`}</i>\n        <Tooltip title=\"Next Page\">\n          <span>\n            <IconButton\n              className=\"pagination-button\"\n              aria-label=\"previous\"\n              color=\"primary\"\n              variant=\"outlined\"\n              onClick={() => updatePageNum(resultsPageNum + 1)}\n              disabled={resultsPageNum + 1 > totalPages}>\n              <NavigateNextIcon />\n            </IconButton>\n          </span>\n        </Tooltip>\n      </React.Fragment>\n    )\n\n    return (\n      <React.Fragment>\n        <Pluralize\n          singular={'match'}\n          plural={'matches'}\n          count={totalResults}\n        />\n        {renderPagination}\n        <Grid\n          container\n          spacing={2}\n          className={classes.movieGrid}\n        >\n          {renderMovies}\n        </Grid>\n        {renderPagination}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Container max-width='lg' id='movie-list'>\n      {(totalResults > 0) ? (\n        renderResults()\n      ) : (\n          <i>{errorMsg} Try searching your favorite movie!</i>\n        )}\n    </Container>\n  );\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\nimport NominationFloatingBtn from '../components/nominations/NominationFloatingBtn';\nimport NominationDrawer from '../components/nominations/NominationDrawer';\nimport NominationFullBanner from '../components/nominations/NominationFullBanner';\nimport MovieSearch from '../components/movies/MovieSearch';\nimport MovieList from '../components/movies/MovieList';\nimport { Container } from '@material-ui/core';\n\nconst API_KEY = process.env.REACT_APP_OMDB_API_KEY\nconst BASE_URL = 'https://www.omdbapi.com/?';\nconst NOMINEE_LIMIT = 5;\n\nconst ShoppiesContainer = () => {\n  // STATES\n  const [searchCount, setSearchCount] = useState(0);\n  // States for each fetch\n  const [lastSearchTitle, setLastSearchTitle] = useState('');\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [totalMatches, setTotalMatches] = useState(0);\n  const [resultsPageNum, setResultsPageNum] = useState(1);\n  // Nominees state\n  const [showNominations, setShowNominations] = useState(false);\n  const [nominees, setNominees] = useState([]);\n  const [nominationFull, setNominationFull] = useState(false);\n  const nomineeCount = nominees.length;\n\n  const resetFetchStates = (searchTitle) => {\n    // Reset resultsPageNum and lastSearchTitle if is a newSearchTitle\n    const newSearchTitle = (searchTitle !== lastSearchTitle);\n    if (newSearchTitle) setResultsPageNum(1);\n    setError(null);\n    setMovies([]);\n    setTotalMatches(0);\n  };\n\n  const fetchMovies = (query, page = 1) => {\n    resetFetchStates(query);\n    if (!query) return false;\n    let apiUrl = BASE_URL.concat(`s=${query}`, `&page=${page}`, `&type=movie&apikey=${API_KEY}`);\n    // Fetch data from OMDB API\n    // Store search results from response in container states\n    // and pass that data down to its child MovieList\n    fetch(apiUrl)\n      .then(resp => resp.json())\n      .then(moviesData => {\n        if (moviesData.Response === 'True') {\n          setTotalMatches(parseInt(moviesData.totalResults));\n          setMovies(moviesData.Search);\n          setLastSearchTitle(query);\n        } else {\n          setError(moviesData.Error);\n        }\n      });\n    return true;\n  };\n\n  const toggleNominationDrawer = () => {\n    setShowNominations(!showNominations);\n  }\n\n  const updatePageNum = (page) => {\n    setResultsPageNum(page);\n    fetchMovies(lastSearchTitle, page);\n  };\n\n  const addNominee = (movie) => {\n    // Disable adding more than 5 nominees max\n    if (nomineeCount >= NOMINEE_LIMIT) return false;\n    if (nomineeCount + 1 >= NOMINEE_LIMIT) setNominationFull(true);\n    // Update state w/ new array by combining old array w/\n    // the new movie obj using JS Spread operator\n    setNominees(oldNominees => [...oldNominees, movie]);\n    return true;\n  };\n\n  const removeNominee = (movie) => {\n    // remove movie object from array of nominees w/o mutating the state\n    if (nomineeCount - 1 < NOMINEE_LIMIT) {\n      setNominationFull(false);\n    }\n    setNominees(oldNominees => oldNominees.filter(nominee => nominee.imdbID !== movie.imdbID));\n  };\n\n  return (\n    <div id='main-container'>\n      <Container max-width='lg'>\n        <h2>Nominate five movies for The Shoppies Movie Awards! 🏆</h2>\n        <NominationFloatingBtn\n          nomineeCount={nomineeCount}\n          toggleNominationDrawer={toggleNominationDrawer}\n        />\n        {nominationFull ? <NominationFullBanner /> : null}\n        {\n          showNominations ? (\n            <NominationDrawer\n              nominees={nominees}\n              removeNominee={removeNominee}\n              toggleDrawer={toggleNominationDrawer}\n              isOpen={showNominations}\n            />\n          ) : null\n        }\n        <MovieSearch fetchMovies={fetchMovies} />\n        <MovieList\n          movies={movies}\n          totalResults={totalMatches}\n          resultsPageNum={resultsPageNum}\n          errorMsg={error}\n          nominees={nominees}\n          nominationFull={nominationFull}\n          updatePageNum={updatePageNum}\n          addNominee={addNominee}\n        />\n      </Container>\n    </div >\n  );\n};\nexport default ShoppiesContainer;","import './App.css';\nimport shoppiesIcon from './images/logo192.png';\nimport ShoppiesContainer from './containers/ShoppiesContainer';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"brand\">\n          <img id=\"logo-img\" alt=\"movie thumbnail\" src={shoppiesIcon} />\n          <span>The Shoppies</span>\n        </div>\n        <div id=\"contact\">\n          <i className=\"italics\">— by Jacqueline Lam</i>\n          <IconButton\n            aria-label=\"source code on github\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => window.open('https://github.com/jacqueline-lam/shoppies-movie-nominations')}\n          >\n            <GitHubIcon size=\"small\" />\n          </IconButton >\n          <IconButton\n            aria-label=\"LinkedIn profile\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => window.open('https://www.linkedin.com/in/jacquelineklam/')}\n          >\n            <LinkedInIcon size=\"small\" />\n          </IconButton>\n        </div>\n      </header>\n      <ShoppiesContainer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // White\n      light: \"#FFFFFF\",\n      dark: \"#cccccc\",\n      main: \"#FFF\",\n    },\n    secondary: {\n      // Shopify light green\n      light: \"#c8f277\",\n      main: \"#95BF47\",\n      dark: \"#64943E\"\n    },\n    remove: {\n      main: \"#CF6679\",\n    },\n    action: {\n      disabled: \"#696969\",\n      disabledBackground: \"#696969\",\n    },\n  },\n  fontFamily: \"Roboto\",\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}